{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tableBody","transformToNumber","salary","Number","replace","split","join","addEventListener","e","target","parentNode","tagName","index","querySelectorAll","findIndex","item","rowsToSort","filter","parentElement","sort","a","b","children","textContent","localeCompare","forEach","append"],"mappings":";AAAA,aAmDC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjDD,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAYF,SAASC,cAAc,SA8CzC,SAASE,EAAkBC,GAClBC,OAAAA,OAAOD,EAAOE,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAK,KA7CxDT,EAAMU,iBAAiB,QAAS,SAACC,GACzBC,IAAAA,EAASD,EAAEC,OAEbA,GAAyC,UAAzCA,EAAOC,WAAWA,WAAWC,QAA7BF,CAIEG,IAAAA,EAAQ,EAAId,SAASe,iBAAiB,OACzCC,UAAU,SAAAC,GAAQA,OAAAA,IAASN,IAExBO,EAAa,EAAIlB,SAASe,iBAAiB,OAC9CI,OAAO,SAAAF,GACCA,MAA+B,UAA/BA,EAAKG,cAAcP,SACU,UAA/BI,EAAKG,cAAcP,UAGpBC,OAAAA,GACD,KAAA,EACHI,EAAWG,KAAK,SAACC,EAAGC,GACXlB,OAAAA,OAAOiB,EAAEE,SAASV,GAAOW,aAC5BpB,OAAOkB,EAAEC,SAASV,GAAOW,eAE/B,MAEG,KAAA,EACHP,EAAWG,KAAK,SAACC,EAAGC,GACXpB,OAAAA,EAAkBmB,EAAEE,SAASV,GAAOW,aACvCtB,EAAkBoB,EAAEC,SAASV,GAAOW,eAE1C,MAEF,QACEP,EAAWG,KAAK,SAACC,EAAGC,GACXD,OAAAA,EAAEE,SAASV,GAAOW,YACtBC,cAAcH,EAAEC,SAASV,GAAOW,eAKzCP,EAAWS,QAAQ,SAAAV,GACjBf,EAAU0B,OAAOX","file":"main.3b218fde.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableBody = document.querySelector('tbody');\n\ntable.addEventListener('click', (e) => {\n  const target = e.target;\n\n  if (target.parentNode.parentNode.tagName !== 'THEAD') {\n    return;\n  }\n\n  const index = [...document.querySelectorAll('th')]\n    .findIndex(item => item === target);\n\n  const rowsToSort = [...document.querySelectorAll('tr')]\n    .filter(item => {\n      return item.parentElement.tagName !== 'THEAD'\n        && item.parentElement.tagName !== 'TFOOT';\n    });\n\n  switch (index) {\n    case 2:\n      rowsToSort.sort((a, b) => {\n        return Number(a.children[index].textContent)\n          - Number(b.children[index].textContent);\n      });\n      break;\n\n    case 3:\n      rowsToSort.sort((a, b) => {\n        return transformToNumber(a.children[index].textContent)\n          - transformToNumber(b.children[index].textContent);\n      });\n      break;\n\n    default:\n      rowsToSort.sort((a, b) => {\n        return a.children[index].textContent\n          .localeCompare(b.children[index].textContent);\n      });\n      break;\n  }\n\n  rowsToSort.forEach(item => {\n    tableBody.append(item);\n  });\n});\n\nfunction transformToNumber(salary) {\n  return Number(salary.replace('$', '').split(',').join(''));\n}\n"]}